var searchIndex = new Map(JSON.parse('[["ocaml_rs_smartptr",{"t":"CCECQQCCQQQCCKMMNNNMFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFFFFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNHNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNIIFFNNNNNNNHHONNHOHNNNHHHNNNNNNNH","n":["callable","func","inventory","ml_box","ocaml_export","ocaml_gen_bindings","ocaml_gen_extras","ptr","register_rtti","register_trait","register_type","registry","stubs","Callable","call_with","describe_args","ocaml_desc","process_result","unique_id","unique_id_args","OCamlFunc","borrow","borrow_mut","call","clone","clone_into","clone_to_uninit","fmt","from","from_value","into","new","ocaml_desc","to_owned","try_from","try_into","type_id","unique_id","MlBox","as_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","","from","into","into_value","new","to_owned","to_string","to_value","try_from","try_into","type_id","OcamlGenPlugin","P1","P2","P3","PolymorphicValue","TypeParams","WithTypeParams","as_mut","as_ref","borrow","","","","","","borrow_mut","","","","","","deref","","deref_mut","","from","","","","","","","","","","from_value","","into","","","","","","into_inner","new","","ocaml_binding","ocaml_desc","","params_count","","","","params_string","","","","stubs_gen_main","to_value","","try_from","","","","","","try_into","","","","","","type_id","","","","","","unique_id","","DynBox","borrow","borrow_mut","clone","clone_into","clone_to_uninit","coerce","coerce_mut","from","","","","from_value","into","new_exclusive","new_exclusive_boxed","new_shared","new_shared_boxed","ocaml_binding","ocaml_desc","to_owned","to_value","try_from","try_into","type_id","unique_id","Handle","HandleMut","Plugin","TypeInfo","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","coerce","coerce_mut","fq_name","from","","get_type_info","implementations","initialize_plugins","into","","new","register","register_type","register_type_info","to_owned","try_from","","try_into","","type_id","","ocaml_rs_smartptr_init_registry"],"q":[[0,"ocaml_rs_smartptr"],[13,"ocaml_rs_smartptr::callable"],[20,"ocaml_rs_smartptr::func"],[38,"ocaml_rs_smartptr::ml_box"],[57,"ocaml_rs_smartptr::ocaml_gen_extras"],[137,"ocaml_rs_smartptr::ptr"],[163,"ocaml_rs_smartptr::registry"],[195,"ocaml_rs_smartptr::stubs"],[196,"ocaml::runtime"],[197,"ocaml::value"],[198,"ocaml_gen"],[199,"alloc::string"],[200,"alloc::vec"],[201,"ocaml::error"],[202,"core::result"],[203,"core::fmt"],[204,"core::any"],[205,"core::option"],[206,"core::marker"],[207,"std::io::error"],[208,"core::error"],[209,"alloc::boxed"],[210,"alloc::sync"],[211,"ocaml_rs_smartptr_macro"]],"i":"``````````````b00000`B`0000000000000000`Bn00000000000000000```````Cb0FfFhFjDhCh54321050505432100555505432105515505Cd5430543`1654321654321654321616`Cj000000000000000000000000````FbEl10000``010`0`101```0101010`","f":"``````````````{{{d{b}}{d{f}}h}c{jl}}{{{d{n}}{d{{Ab{{d{A`}}}}}}}{{Af{Ad}}}}{{{d{n}}{d{{Ab{{d{A`}}}}}}}Ad}{{{d{b}}{Aj{hAh}}}c{jl}}{{}Al}{{}{{Af{Al}}}}`{d{{d{c}}}{}}{{{d{An}}}{{d{Anc}}}{}}{{{d{{B`{ec}}}}{d{f}}e}c{lj}{{b{c}}}}{{{d{{B`{ce}}}}}{{B`{ce}}}{}{}}{{d{d{Anc}}}Bb{}}{{dBd}Bb}{{{d{{B`{ce}}}}{d{AnBf}}}BhBjBj}{cc{}}{h{{B`{ce}}}{}{}}{{}c{}}{{{d{f}}h}{{B`{ce}}}{}{}}>{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dBl}{{}Al}`{{{d{Bn}}{d{f}}}h}{d{{d{c}}}{}}{{{d{An}}}{{d{Anc}}}{}}{{{d{Bn}}}Bn}?>{{{d{Bn}}{d{AnBf}}}Bh}0=;{{Bn{d{f}}}{{C`{h}}}}{{{d{f}}h}Bn};{dAd}7;:9```````{{{d{An{Cb{ce}}}}}{{d{Ane}}}Cd{jCf}}{{{d{{Cb{ce}}}}}{{d{e}}}Cd{jCf}}888888777777{{{d{Ch}}}{{d{c}}}{}}{{{d{{Cb{ce}}}}}{{d{g}}}Cd{jCf}{}}{{{d{AnCh}}}{{d{Anc}}}{}}{{{d{An{Cb{ce}}}}}{{d{Ang}}}Cd{jCf}{}}{cc{}}0000{hCh}1{c{{Cb{e{Cj{c}}}}}ClCd}{{{D`{c{Cn{e}}}}}{{Cb{ec}}}{jCf}Cd}{Dbc{}}3{h{{Cb{ce}}}Cd{jCf}}{{}c{}}00000{{{Cb{ce}}}eCd{jCfl}}{{{d{A`}}{Df{{d{Ann}}}{{Dd{Ad}}}}}Dh}{c{{Cb{ec}}}{jCfl}Cd}{{{d{Ann}}{C`{{d{A`}}}}Dj}Ad}{{{d{n}}{d{{Ab{{d{A`}}}}}}}Ad}0{{}Dl}000{{}Ad}000{{}{{Dn{Bb}}}}{{{d{Ch}}{d{f}}}h}{{{d{{Cb{ce}}}}{d{f}}}hCd{jCf}}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{dBl}00000{{}Al}0`{d{{d{c}}}{}}{{{d{An}}}{{d{Anc}}}{}}{{{d{{Cj{c}}}}}{{Cj{c}}}{ClE`}}{{d{d{Anc}}}Bb{}}{{dBd}Bb}{{{d{{Cj{c}}}}}{{Eb{c}}}{ClE`}}{{{d{{Cj{c}}}}}{{Ed{c}}}{ClE`}}{c{{Cj{Ef}}}{EfCl}}{c{{Cj{c}}}Cl}{cc{}}{Dbc{}}{h{{Cj{c}}}{ClE`}}{{}c{}}4{{{Eh{c}}}{{Cj{c}}}{ClE`}}{c{{Cj{c}}}{EjCl}}{{{Eh{c}}}{{Cj{c}}}{EjClE`}}{{{d{Ann}}{C`{{d{A`}}}}Dj}Ad}{{{d{n}}{d{{Ab{{d{A`}}}}}}}Ad}{dc{}}{{{d{{Cj{c}}}}{d{f}}}h{ClE`}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dBl}{{}Al}````{d{{d{c}}}{}}0{{{d{An}}}{{d{Anc}}}{}}0{{{d{El}}}El}{{d{d{Anc}}}Bb{}}{{dBd}Bb}{{{F`{En}}}{{Eb{c}}}E`}{{{F`{En}}}{{Ed{c}}}E`}{Eld}{cc{}}0{{}El}{ElAf}{{}Bb}{{}c{}}0{{{Df{}{{Dd{Bb}}}}}Fb}{{{Df{{d{c}}}{{Dd{{d{e}}}}}}{Df{{d{Anc}}}{{Dd{{d{Ane}}}}}}}BbE`E`}3{{{d{A`}}{Af{{d{A`}}}}}Bb}{dc{}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dBl}0{FdFd}","D":"Ih","p":[[10,"Callable",13],[1,"reference",null,null,1],[5,"Runtime",196],[6,"Value",197],[10,"FromValue",197],[10,"OCamlDesc",198],[5,"Env",198],[1,"str"],[1,"slice"],[5,"String",199],[5,"Vec",200],[6,"Error",201],[6,"Result",202,null,1],[1,"u128"],[0,"mut"],[5,"OCamlFunc",20],[1,"unit"],[1,"u8"],[5,"Formatter",203],[8,"Result",203],[10,"Debug",203],[5,"TypeId",204],[5,"MlBox",38],[6,"Option",205,null,1],[5,"WithTypeParams",57],[10,"TypeParams",57],[10,"ToValue",197],[5,"PolymorphicValue",57],[5,"DynBox",137],[10,"Send",206],[5,"PhantomData",206],[1,"tuple",null,null,1],[1,"never"],[17,"Output"],[1,"fn"],[5,"OcamlGenPlugin",57],[1,"bool"],[1,"usize"],[8,"Result",207],[10,"Sized",206],[8,"Handle",163],[8,"HandleMut",163],[10,"Error",208],[5,"Box",209,null,1],[10,"Sync",206],[5,"TypeInfo",163],[10,"Any",204],[5,"Arc",210,null,1],[5,"Plugin",163],[5,"Raw",197],[5,"P1",57],[5,"P2",57],[5,"P3",57]],"r":[[9,211],[10,211]],"b":[[45,"impl-Debug-for-MlBox"],[46,"impl-Display-for-MlBox"],[89,"impl-From%3CT%3E-for-WithTypeParams%3CP,+DynBox%3CT%3E%3E"],[90,"impl-From%3C(T,+PhantomData%3CP%3E)%3E-for-WithTypeParams%3CP,+T%3E"],[145,"impl-From%3CE%3E-for-DynBox%3Cdyn+Error+%2B+Send%3E"],[146,"impl-From%3CT%3E-for-DynBox%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHgAGQAAAAMABQABAAkAAgAPAAAAEgABABYAAQAaAAIAIgADACkABgA0AAUAQQARAFgAAABaAAQAaQABAGwAAgBwAAIAdAAVAIsABACSAAAAlQABAJwABwCoAAYAsQAAALUAAAC9AAcA","P":[[14,"Ret"],[15,""],[17,"Ret"],[18,""],[21,"T"],[23,"Ret,Args"],[24,"Args,Ret"],[25,"T"],[26,""],[27,"Args,Ret"],[28,"T"],[29,"Args,Ret"],[30,"U"],[31,"Args,Ret"],[32,""],[33,"T"],[34,"U,T"],[35,"U"],[36,""],[40,"T"],[42,""],[43,"T"],[44,""],[47,"T"],[48,"U"],[49,""],[51,"T"],[52,""],[54,"U,T"],[55,"U"],[56,""],[64,"P,T"],[66,"T"],[78,"Deref::Target"],[79,"P,T,Deref::Target"],[80,"Deref::Target"],[81,"P,T,Deref::Target"],[82,"T"],[87,""],[88,"T"],[89,"T,P"],[91,"T"],[92,""],[93,"P,T"],[94,"U"],[100,"P,T"],[101,""],[102,"T,P"],[103,""],[116,"P,T"],[117,"U,T"],[123,"U"],[129,""],[138,"T"],[142,""],[143,"T"],[145,"E"],[146,"T"],[150,"U"],[151,"T"],[155,""],[157,"T"],[159,"U,T"],[160,"U"],[161,""],[167,"T"],[171,""],[172,"T"],[173,""],[174,"Out"],[176,""],[177,"T"],[179,""],[182,"U"],[184,""],[185,"In,Out"],[186,""],[188,"T"],[189,"U,T"],[191,"U"],[193,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7034]}