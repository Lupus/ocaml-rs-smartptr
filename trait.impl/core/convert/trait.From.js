(function() {
    var implementors = Object.fromEntries([["ocaml_rs_smartptr",[["impl&lt;E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;E&gt; for <a class=\"struct\" href=\"ocaml_rs_smartptr/ptr/struct.DynBox.html\" title=\"struct ocaml_rs_smartptr::ptr::DynBox\">DynBox</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div>"],["impl&lt;P: <a class=\"trait\" href=\"ocaml_rs_smartptr/ocaml_gen_extras/trait.TypeParams.html\" title=\"trait ocaml_rs_smartptr::ocaml_gen_extras::TypeParams\">TypeParams</a>, T: FromValue + ToValue&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;P&gt;)&gt; for <a class=\"struct\" href=\"ocaml_rs_smartptr/ocaml_gen_extras/struct.WithTypeParams.html\" title=\"struct ocaml_rs_smartptr::ocaml_gen_extras::WithTypeParams\">WithTypeParams</a>&lt;P, T&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"ocaml_rs_smartptr/ptr/struct.DynBox.html\" title=\"struct ocaml_rs_smartptr::ptr::DynBox\">DynBox</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div>"],["impl&lt;T, P: <a class=\"trait\" href=\"ocaml_rs_smartptr/ocaml_gen_extras/trait.TypeParams.html\" title=\"trait ocaml_rs_smartptr::ocaml_gen_extras::TypeParams\">TypeParams</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"ocaml_rs_smartptr/ocaml_gen_extras/struct.WithTypeParams.html\" title=\"struct ocaml_rs_smartptr::ocaml_gen_extras::WithTypeParams\">WithTypeParams</a>&lt;P, <a class=\"struct\" href=\"ocaml_rs_smartptr/ptr/struct.DynBox.html\" title=\"struct ocaml_rs_smartptr::ptr::DynBox\">DynBox</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div>"],["impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.char.html\">char</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"ocaml_rs_smartptr/ocaml_gen_extras/struct.PolymorphicValue.html\" title=\"struct ocaml_rs_smartptr::ocaml_gen_extras::PolymorphicValue\">PolymorphicValue</a>&lt;C&gt;&gt; for Value"],["impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.char.html\">char</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Value&gt; for <a class=\"struct\" href=\"ocaml_rs_smartptr/ocaml_gen_extras/struct.PolymorphicValue.html\" title=\"struct ocaml_rs_smartptr::ocaml_gen_extras::PolymorphicValue\">PolymorphicValue</a>&lt;C&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[3904]}